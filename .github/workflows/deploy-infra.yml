name: CICD Pipeline

on:
  push:
    branches:
      - main # This means the pipeline will only run if code is pushed to the main branch

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Terraform Repo
        uses: actions/checkout@v3

      - name: Update apt and install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg

      - name: Import HashiCorp GPG key
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg

      - name: Add HashiCorp repository
        run: |
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com noble main" | sudo tee /etc/apt/sources.list.d/hashicorp.list

      - name: Install Terraform
        run: |
          sudo apt update
          sudo apt install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install -y terraform

      - name: Terraform Init
        run: |
          cd ${{ github.workspace }}
          terraform init

      - name: Terraform Apply
        run: |
          cd ${{ github.workspace }}
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_public_key: ${{ secrets.PUBLIC_KEY }}
          TF_VAR_ansible_public_key: ${{ secrets.ANSIBLE_PUB_KEY }}
          TF_VAR_windows_private_key: ${{ secrets.WINDOWS_PRIVATE_KEY }}
